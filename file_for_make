.PHONY: clean

# pwd
CURDIR:=$(shell pwd)

CMD_DIR=$(CURDIR)/cmd

# packages for go
PACKAGE_PATH=$(CURDIR)/src/github.com/Combaine

# build dir
BUILD_DIR=$(CURDIR)/build

#export GOPATH=$(CURDIR)

OS := $(shell uname)
ifeq ($(OS), Darwin)
	export CGO_CFLAGS=-I/usr/local/include/zookeeper
endif


PKGS := $(shell go list ./... | grep -v ^github.com/Combaine/Combaine/vendor/)

all: deps combainer_ agave_ aggregating_ parsing_ graphite_ razladki_ cbb_ solomon_

deps:
	go get gopkg.in/yaml.v2
	go get github.com/cocaine/cocaine-framework-go/cocaine
	go get github.com/Sirupsen/logrus
	go get github.com/gorilla/mux
	go get github.com/mitchellh/mapstructure
	go get github.com/kr/pretty
	mkdir -vp $(PACKAGE_PATH)
	if [ ! -d $(CURDIR)/src/github.com/Combaine/Combaine ];then\
		ln -vs $(CURDIR) $(CURDIR)/src/github.com/Combaine/Combaine; fi;

combainer_: deps
	go build -o $(BUILD_DIR)/combainer $(CMD_DIR)/combainer/main.go

aggregating_: deps
	go build -o $(BUILD_DIR)/aggregate-core $(CMD_DIR)/aggregating/main.go

parsing_: deps
	go build -o $(BUILD_DIR)/parsing-core $(CMD_DIR)/parsing/main.go

agave_: deps
	go build -o $(BUILD_DIR)/agave $(CMD_DIR)/agave/main.go

graphite_: deps
	go build -o $(BUILD_DIR)/graphite $(CMD_DIR)/graphite/main.go

razladki_: deps
	go build -o $(BUILD_DIR)/razladki $(CMD_DIR)/razladki/main.go

cbb_: deps
	go build -o $(BUILD_DIR)/cbb $(CMD_DIR)/cbb/main.go

solomon_: deps
	go build -o $(BUILD_DIR)/solomon $(CMD_DIR)/solomon/main.go


fixture: deps
	go run tests/fixtures/gen_fixtures.go

clean::
	rm -rf $(BUILD_DIR) || true

test:
	@echo "+ $@"
	@echo "" > coverage.txt
	@set -e; for pkg in $(PKGS); do go test -coverprofile=profile.out -covermode=atomic $$pkg; \
	if [ -f profile.out ]; then \
		cat profile.out >> coverage.txt; rm  profile.out; \
	fi done; \
# vim: ft=make
