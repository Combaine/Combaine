syntax = "proto3";

option go_package = "worker";
import "timeframe.proto";

message ParsingTask {
    string id = 1;
    TimeFrame frame = 2;
    // Hostname of target
    string host = 3;
    // Name of handled parsing config
    string parsing_config_name = 4;
    // msgpacked content of the current parsing config
    bytes encoded_parsing_config = 5;
    // msgpacked content of aggregation configs
	// related to the current parsing config
    bytes encoded_aggregation_configs = 6;
}

message ParsingResult {
    map <string, bytes> data = 1;
}


message AggregatingTask {
    string id = 1;
    TimeFrame frame = 2;
    // Name of the current aggregation config
    string config = 3;
    // Name of handled parsing config
    string parsing_config_name = 4;
    // Content of the current parsing config
    bytes encoded_parsing_config = 5;
    // Current aggregation config
    bytes encoded_aggregation_config = 6;
    // hosts
    bytes encoded_hosts = 7;
    // parsing results
    ParsingResult parsing_result = 8;
}

message AggregatingResponse {
}

message AggregationResult {
	map<string, string> tags = 4;
	bytes result = 2;
}

message SenderRequest {
    string id = 1;
    TimeFrame frame = 2;
	bytes Config = 3;
	repeated AggregationResult data = 5;
}

message SenderResponse {
    string response = 1;
}

service Worker {
    rpc DoParsing(ParsingTask) returns (ParsingResult) {}
    rpc DoAggregating(AggregatingTask) returns (AggregatingResponse) {}
}

service Sender {
    rpc DoSend(SenderRequest) returns (SenderResponse) {}
}
