// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TimeFrame struct {
	Previous             int64    `protobuf:"varint,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Current              int64    `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeFrame) Reset()         { *m = TimeFrame{} }
func (m *TimeFrame) String() string { return proto.CompactTextString(m) }
func (*TimeFrame) ProtoMessage()    {}
func (*TimeFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d51e8213c0fcfbea, []int{0}
}
func (m *TimeFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeFrame.Unmarshal(m, b)
}
func (m *TimeFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeFrame.Marshal(b, m, deterministic)
}
func (dst *TimeFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeFrame.Merge(dst, src)
}
func (m *TimeFrame) XXX_Size() int {
	return xxx_messageInfo_TimeFrame.Size(m)
}
func (m *TimeFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeFrame.DiscardUnknown(m)
}

var xxx_messageInfo_TimeFrame proto.InternalMessageInfo

func (m *TimeFrame) GetPrevious() int64 {
	if m != nil {
		return m.Previous
	}
	return 0
}

func (m *TimeFrame) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

type ParsingTask struct {
	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Frame *TimeFrame `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	// Hostname of target
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	// Name of handled parsing config
	ParsingConfigName string `protobuf:"bytes,4,opt,name=parsing_config_name,json=parsingConfigName,proto3" json:"parsing_config_name,omitempty"`
	// msgpacked content of the current parsing config
	EncodedParsingConfig []byte `protobuf:"bytes,5,opt,name=encoded_parsing_config,json=encodedParsingConfig,proto3" json:"encoded_parsing_config,omitempty"`
	// msgpacked content of aggregation configs
	// related to the current parsing config
	EncodedAggregationConfigs []byte   `protobuf:"bytes,6,opt,name=encoded_aggregation_configs,json=encodedAggregationConfigs,proto3" json:"encoded_aggregation_configs,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *ParsingTask) Reset()         { *m = ParsingTask{} }
func (m *ParsingTask) String() string { return proto.CompactTextString(m) }
func (*ParsingTask) ProtoMessage()    {}
func (*ParsingTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d51e8213c0fcfbea, []int{1}
}
func (m *ParsingTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParsingTask.Unmarshal(m, b)
}
func (m *ParsingTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParsingTask.Marshal(b, m, deterministic)
}
func (dst *ParsingTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParsingTask.Merge(dst, src)
}
func (m *ParsingTask) XXX_Size() int {
	return xxx_messageInfo_ParsingTask.Size(m)
}
func (m *ParsingTask) XXX_DiscardUnknown() {
	xxx_messageInfo_ParsingTask.DiscardUnknown(m)
}

var xxx_messageInfo_ParsingTask proto.InternalMessageInfo

func (m *ParsingTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ParsingTask) GetFrame() *TimeFrame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *ParsingTask) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ParsingTask) GetParsingConfigName() string {
	if m != nil {
		return m.ParsingConfigName
	}
	return ""
}

func (m *ParsingTask) GetEncodedParsingConfig() []byte {
	if m != nil {
		return m.EncodedParsingConfig
	}
	return nil
}

func (m *ParsingTask) GetEncodedAggregationConfigs() []byte {
	if m != nil {
		return m.EncodedAggregationConfigs
	}
	return nil
}

type ParsingResult struct {
	Data                 map[string][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ParsingResult) Reset()         { *m = ParsingResult{} }
func (m *ParsingResult) String() string { return proto.CompactTextString(m) }
func (*ParsingResult) ProtoMessage()    {}
func (*ParsingResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d51e8213c0fcfbea, []int{2}
}
func (m *ParsingResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParsingResult.Unmarshal(m, b)
}
func (m *ParsingResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParsingResult.Marshal(b, m, deterministic)
}
func (dst *ParsingResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParsingResult.Merge(dst, src)
}
func (m *ParsingResult) XXX_Size() int {
	return xxx_messageInfo_ParsingResult.Size(m)
}
func (m *ParsingResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ParsingResult.DiscardUnknown(m)
}

var xxx_messageInfo_ParsingResult proto.InternalMessageInfo

func (m *ParsingResult) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AggregatingTask struct {
	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Frame *TimeFrame `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	// Name of the current aggregation config
	Config string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// Name of handled parsing config
	ParsingConfigName string `protobuf:"bytes,4,opt,name=parsing_config_name,json=parsingConfigName,proto3" json:"parsing_config_name,omitempty"`
	// Content of the current parsing config
	EncodedParsingConfig []byte `protobuf:"bytes,5,opt,name=encoded_parsing_config,json=encodedParsingConfig,proto3" json:"encoded_parsing_config,omitempty"`
	// Current aggregation config
	EncodedAggregationConfig []byte `protobuf:"bytes,6,opt,name=encoded_aggregation_config,json=encodedAggregationConfig,proto3" json:"encoded_aggregation_config,omitempty"`
	// hosts
	EncodedHosts []byte `protobuf:"bytes,7,opt,name=encoded_hosts,json=encodedHosts,proto3" json:"encoded_hosts,omitempty"`
	// parsing results
	ParsingResult        *ParsingResult `protobuf:"bytes,8,opt,name=parsing_result,json=parsingResult,proto3" json:"parsing_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AggregatingTask) Reset()         { *m = AggregatingTask{} }
func (m *AggregatingTask) String() string { return proto.CompactTextString(m) }
func (*AggregatingTask) ProtoMessage()    {}
func (*AggregatingTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d51e8213c0fcfbea, []int{3}
}
func (m *AggregatingTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatingTask.Unmarshal(m, b)
}
func (m *AggregatingTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatingTask.Marshal(b, m, deterministic)
}
func (dst *AggregatingTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatingTask.Merge(dst, src)
}
func (m *AggregatingTask) XXX_Size() int {
	return xxx_messageInfo_AggregatingTask.Size(m)
}
func (m *AggregatingTask) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatingTask.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatingTask proto.InternalMessageInfo

func (m *AggregatingTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AggregatingTask) GetFrame() *TimeFrame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *AggregatingTask) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *AggregatingTask) GetParsingConfigName() string {
	if m != nil {
		return m.ParsingConfigName
	}
	return ""
}

func (m *AggregatingTask) GetEncodedParsingConfig() []byte {
	if m != nil {
		return m.EncodedParsingConfig
	}
	return nil
}

func (m *AggregatingTask) GetEncodedAggregationConfig() []byte {
	if m != nil {
		return m.EncodedAggregationConfig
	}
	return nil
}

func (m *AggregatingTask) GetEncodedHosts() []byte {
	if m != nil {
		return m.EncodedHosts
	}
	return nil
}

func (m *AggregatingTask) GetParsingResult() *ParsingResult {
	if m != nil {
		return m.ParsingResult
	}
	return nil
}

type AggregatingResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatingResult) Reset()         { *m = AggregatingResult{} }
func (m *AggregatingResult) String() string { return proto.CompactTextString(m) }
func (*AggregatingResult) ProtoMessage()    {}
func (*AggregatingResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d51e8213c0fcfbea, []int{4}
}
func (m *AggregatingResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatingResult.Unmarshal(m, b)
}
func (m *AggregatingResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatingResult.Marshal(b, m, deterministic)
}
func (dst *AggregatingResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatingResult.Merge(dst, src)
}
func (m *AggregatingResult) XXX_Size() int {
	return xxx_messageInfo_AggregatingResult.Size(m)
}
func (m *AggregatingResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatingResult.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatingResult proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TimeFrame)(nil), "TimeFrame")
	proto.RegisterType((*ParsingTask)(nil), "ParsingTask")
	proto.RegisterType((*ParsingResult)(nil), "ParsingResult")
	proto.RegisterMapType((map[string][]byte)(nil), "ParsingResult.DataEntry")
	proto.RegisterType((*AggregatingTask)(nil), "AggregatingTask")
	proto.RegisterType((*AggregatingResult)(nil), "AggregatingResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkerClient is the client API for Worker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerClient interface {
	DoParsing(ctx context.Context, in *ParsingTask, opts ...grpc.CallOption) (*ParsingResult, error)
	DoAggregating(ctx context.Context, in *AggregatingTask, opts ...grpc.CallOption) (*AggregatingResult, error)
}

type workerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerClient(cc *grpc.ClientConn) WorkerClient {
	return &workerClient{cc}
}

func (c *workerClient) DoParsing(ctx context.Context, in *ParsingTask, opts ...grpc.CallOption) (*ParsingResult, error) {
	out := new(ParsingResult)
	err := c.cc.Invoke(ctx, "/Worker/DoParsing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) DoAggregating(ctx context.Context, in *AggregatingTask, opts ...grpc.CallOption) (*AggregatingResult, error) {
	out := new(AggregatingResult)
	err := c.cc.Invoke(ctx, "/Worker/DoAggregating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServer is the server API for Worker service.
type WorkerServer interface {
	DoParsing(context.Context, *ParsingTask) (*ParsingResult, error)
	DoAggregating(context.Context, *AggregatingTask) (*AggregatingResult, error)
}

func RegisterWorkerServer(s *grpc.Server, srv WorkerServer) {
	s.RegisterService(&_Worker_serviceDesc, srv)
}

func _Worker_DoParsing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParsingTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).DoParsing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Worker/DoParsing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).DoParsing(ctx, req.(*ParsingTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_DoAggregating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AggregatingTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).DoAggregating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Worker/DoAggregating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).DoAggregating(ctx, req.(*AggregatingTask))
	}
	return interceptor(ctx, in, info, handler)
}

var _Worker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Worker",
	HandlerType: (*WorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoParsing",
			Handler:    _Worker_DoParsing_Handler,
		},
		{
			MethodName: "DoAggregating",
			Handler:    _Worker_DoAggregating_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_d51e8213c0fcfbea) }

var fileDescriptor_rpc_d51e8213c0fcfbea = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0x4f, 0x6f, 0xd4, 0x30,
	0x10, 0xc5, 0x9b, 0xec, 0x9f, 0x36, 0xb3, 0x7f, 0x68, 0xa7, 0x55, 0x65, 0xc2, 0x65, 0x15, 0x2e,
	0x2b, 0x81, 0x7c, 0x58, 0x40, 0x45, 0x08, 0x21, 0x55, 0x2c, 0x88, 0x13, 0xaa, 0xac, 0x4a, 0x1c,
	0x57, 0x26, 0x71, 0x43, 0xb4, 0xad, 0x1d, 0xd9, 0xce, 0x4a, 0xfd, 0xac, 0x7c, 0x12, 0x6e, 0x28,
	0x8e, 0x13, 0xb2, 0x45, 0xbd, 0x70, 0xe0, 0x96, 0x99, 0x37, 0xef, 0xd9, 0xfa, 0x8d, 0x03, 0x91,
	0x2e, 0x53, 0x5a, 0x6a, 0x65, 0x55, 0x72, 0x09, 0xd1, 0x75, 0x71, 0x27, 0x3e, 0x6b, 0x7e, 0x27,
	0x30, 0x86, 0xa3, 0x52, 0x8b, 0x5d, 0xa1, 0x2a, 0x43, 0x82, 0x45, 0xb0, 0x1c, 0xb0, 0xae, 0x46,
	0x02, 0x87, 0x69, 0xa5, 0xb5, 0x90, 0x96, 0x84, 0x4e, 0x6a, 0xcb, 0xe4, 0x57, 0x00, 0x93, 0x2b,
	0xae, 0x4d, 0x21, 0xf3, 0x6b, 0x6e, 0xb6, 0x38, 0x87, 0xb0, 0xc8, 0x9c, 0x3f, 0x62, 0x61, 0x91,
	0xe1, 0x02, 0x46, 0x37, 0x75, 0xbc, 0xf3, 0x4d, 0x56, 0x40, 0xbb, 0x03, 0x59, 0x23, 0x20, 0xc2,
	0xf0, 0x87, 0x32, 0x96, 0x0c, 0x9c, 0xc7, 0x7d, 0x23, 0x85, 0xd3, 0xb2, 0x09, 0xdd, 0xa4, 0x4a,
	0xde, 0x14, 0xf9, 0x46, 0xd6, 0x19, 0x43, 0x37, 0x72, 0xe2, 0xa5, 0x8f, 0x4e, 0xf9, 0x5a, 0x67,
	0xbc, 0x86, 0x73, 0x21, 0x53, 0x95, 0x89, 0x6c, 0xb3, 0xef, 0x23, 0xa3, 0x45, 0xb0, 0x9c, 0xb2,
	0x33, 0xaf, 0x5e, 0xf5, 0x9d, 0xf8, 0x01, 0x9e, 0xb5, 0x2e, 0x9e, 0xe7, 0x5a, 0xe4, 0xdc, 0x16,
	0x4a, 0x7a, 0xa7, 0x21, 0x63, 0x67, 0x7d, 0xea, 0x47, 0x2e, 0xff, 0x4c, 0x34, 0x76, 0x93, 0xec,
	0x60, 0xe6, 0x03, 0x99, 0x30, 0xd5, 0xad, 0xc5, 0x97, 0x30, 0xcc, 0xb8, 0xe5, 0x24, 0x58, 0x0c,
	0x96, 0x93, 0x15, 0xa1, 0x7b, 0x2a, 0x5d, 0x73, 0xcb, 0x3f, 0x49, 0xab, 0xef, 0x99, 0x9b, 0x8a,
	0x2f, 0x20, 0xea, 0x5a, 0x78, 0x0c, 0x83, 0xad, 0xb8, 0xf7, 0xe0, 0xea, 0x4f, 0x3c, 0x83, 0xd1,
	0x8e, 0xdf, 0x56, 0x0d, 0xb9, 0x29, 0x6b, 0x8a, 0x77, 0xe1, 0xdb, 0x20, 0xf9, 0x19, 0xc2, 0x93,
	0xee, 0x3a, 0xff, 0xcc, 0xfd, 0x1c, 0xc6, 0x9e, 0x51, 0x43, 0xde, 0x57, 0xff, 0x89, 0xfd, 0x7b,
	0x88, 0x1f, 0x67, 0xef, 0xd1, 0x93, 0xc7, 0xd0, 0xe3, 0x73, 0x98, 0xb5, 0xee, 0xfa, 0xbd, 0x18,
	0x72, 0xe8, 0x0c, 0x53, 0xdf, 0xfc, 0x52, 0xf7, 0xf0, 0x0d, 0xcc, 0xdb, 0x0b, 0x69, 0xb7, 0x01,
	0x72, 0xe4, 0x58, 0xcc, 0xf7, 0xf7, 0xc2, 0x66, 0x65, 0xbf, 0x4c, 0x4e, 0xe1, 0xa4, 0x07, 0xb7,
	0x69, 0xae, 0x24, 0x8c, 0xbf, 0x29, 0xbd, 0x15, 0x1a, 0x5f, 0x40, 0xb4, 0x56, 0x3e, 0x00, 0xa7,
	0xb4, 0xf7, 0xf6, 0xe3, 0x07, 0xc1, 0xc9, 0x01, 0x5e, 0xc0, 0x6c, 0xad, 0x7a, 0x69, 0x78, 0x4c,
	0x1f, 0x2c, 0x2e, 0x46, 0xfa, 0xd7, 0x69, 0xc9, 0xc1, 0xf7, 0xb1, 0xfb, 0x41, 0x5f, 0xfd, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0x17, 0x7d, 0xbc, 0x34, 0xad, 0x03, 0x00, 0x00,
}
