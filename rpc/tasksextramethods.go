package rpc

// this file add methods to types generated by protoc

import (
	"github.com/combaine/combaine/common/hosts"
	"github.com/combaine/combaine/repository"
	"github.com/combaine/combaine/utils"
)

// GetParsingConfig decodes transported ParsingConfig from msgpack
func (t *ParsingTask) GetParsingConfig() repository.ParsingConfig {
	var config repository.ParsingConfig
	utils.Unpack(t.EncodedParsingConfig, &config)
	return config
}

// GetAggregationConfigs decodes transported configs from msgpack
func (t *ParsingTask) GetAggregationConfigs() map[string]repository.AggregationConfig {
	var result map[string]repository.AggregationConfig
	utils.Unpack(t.EncodedAggregationConfigs, &result)
	return result
}

// GetParsingConfig decodes transported ParsingConfig from msgpack
func (t *AggregatingTask) GetParsingConfig() repository.ParsingConfig {
	var config repository.ParsingConfig
	utils.Unpack(t.EncodedParsingConfig, &config)
	return config
}

// GetAggregationConfig decodes transported AggregationConfig from msgpack
func (t *AggregatingTask) GetAggregationConfig() repository.AggregationConfig {
	var config repository.AggregationConfig
	utils.Unpack(t.EncodedAggregationConfig, &config)
	return config
}

// GetHosts decodes Hosts
func (t *AggregatingTask) GetHosts() hosts.Hosts {
	var h hosts.Hosts
	utils.Unpack(t.EncodedHosts, &h)
	return h
}
